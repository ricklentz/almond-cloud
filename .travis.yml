branches:
  except:
  - "/^wip/"
language: node_js
sudo: true
addons:
  ssh_known_hosts:
  - almond-dev.stanford.edu
  mariadb: '10.2'
  firefox: latest-esr
node_js:
- '8'
before_install:
- test "$TRAVIS_REPO_SLUG" != "Stanford-Mobisocial-IoT-Lab/almond-cloud" || (openssl
  aes-256-cbc -K $encrypted_6dd165f04fd2_key -iv $encrypted_6dd165f04fd2_iv -in ./travis/id_rsa.autodeploy.enc
  -out ./travis/id_rsa.autodeploy -d && chmod 0600 ./travis/id_rsa.autodeploy)
- curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.1
- mkdir cvc4/
- wget https://almond-static.stanford.edu/test-data/cvc4-1.6-x86_64-linux-opt
  -O cvc4/cvc4
- chmod +x cvc4/cvc4
- mkdir geckodriver/
- wget https://github.com/mozilla/geckodriver/releases/download/v0.22.0/geckodriver-v0.22.0-linux64.tar.gz
- tar xvf geckodriver-v0.22.0-linux64.tar.gz -C geckodriver/
- export PATH="`pwd`/cvc4:`pwd`/geckodriver:${HOME}/.yarn/bin:$PATH"
- sudo apt-get update -q -y
install:
- sudo apt-get install -y graphicsmagick libcairo2-dev libpango1.0-dev libgif-dev
  realpath
- yarn
- ( cd node_modules/thingengine-core ; for i in data/*.tt ; do node -e 'console.log(JSON.stringify(require("fs").readFileSync("'${i}'").toString("utf8")))' > lib/devices/builtins/$(basename $i).json ; done )
before_script:
- mysql -u root -e "create database if not exists thingengine_test; grant all privileges
  on thingengine_test.* to 'thingengine'@'%' identified by 'thingengine';"
script:
- yarn lint
- yarn test
after_success: yarn run coverage
deploy:
  provider: script
  skip_cleanup: true
  script: ssh -i ./travis/id_rsa.autodeploy autodeploy@almond-dev.stanford.edu
  on:
    branch: staging
    repo: Stanford-Mobisocial-IoT-Lab/almond-cloud
